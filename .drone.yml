pipeline:
  identify:
    image: docker
    commands:
      # Grab the current version, prevents race conditions
      - apk add --no-cache curl jq
      - curl -fL https://api.github.com/repos/theotherp/nzbhydra2/releases/latest 
          | jq -r .tag_name
          | tee /dev/stderr
          | tr -d 'v' > .nzbhydra_tag

  build:
    image: docker
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build
            --no-cache --pull
            --build-arg NZBHYDRA_VER=$(cat .nzbhydra_tag)
            -t hydra-dev .

  test:
    image: docker
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - apk add --no-cache curl
      - CON_NAME=$(docker run -dt -e SUID=0 hydra-dev)
      - timeout -t 12 -- docker logs -f $$CON_NAME | cat &
      - sleep 10
      - IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME)
      - if [ -z "$IP" ]; then
            echo "The container exited.. sadpanda";
            docker inspect --format='{{.State.ExitCode}}' $$CON_NAME;
            docker rm $$CON_NAME
            exit 25;
        fi
      - curl -L --retry-max-time 30 --max-time 5 --retry 10 --retry-delay 5 --retry-connrefused $IP:5076 > /dev/null
      - docker kill $$CON_NAME
      - docker rm $$CON_NAME

  publish:
    image: docker
    secrets: [ DOCKER_USER, DOCKER_PASS ]
    when:
      event: [ push, tag, deployment ]
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    commands:
       - docker login -u $DOCKER_USER -p $DOCKER_PASS
       - for tag in "beta" "$(cat .nzbhydra_tag)-beta"; do
             docker tag hydra-dev adamant/nzbhydra:$tag;
             docker push adamant/nzbhydra:$tag;
         done
       - docker rmi hydra-dev
       - for tag in "beta" "$(cat .nzbhydra_tag)-beta"; do
             docker rmi adamant/nzbhydra:$tag;
         done
       - echo "CONGRATS! SUCCESSFULLY BUILT NZBHYDRA!"
